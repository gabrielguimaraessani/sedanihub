rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ========== FUNÇÕES AUXILIARES ==========
    
    function isAuthenticated() {
      return request.auth != null;
    }

    function isSedaniUser() {
      return isAuthenticated() && 
             (request.auth.token.email.matches('.*@sedanimed\\.br$') ||
              request.auth.token.email.matches('.*@sani\\.med\\.br$'));
    }

    function hasRole(role) {
      return isSedaniUser() && role in request.auth.token.roles;
    }

    function isAdmin() { return hasRole('admin'); }
    function isMedico() { return hasRole('medico'); }
    
    function getUserEmail() {
      return request.auth.token.email;
    }

    // Verifica se usuário está no plantão de hoje
    function usuarioEstaNoPlantaoHoje() {
      let hoje = request.time.date();
      let amanha = request.time.date() + duration.value(1, 'd');
      
      return exists(/databases/$(database)/documents/plantoes/$(getUserEmail())) &&
             get(/databases/$(database)/documents/plantoes/$(getUserEmail())).data.data >= hoje &&
             get(/databases/$(database)/documents/plantoes/$(getUserEmail())).data.data < amanha;
    }

    // ========== VALIDATORS ==========
    
    function isEnum(val, arr) {
      return arr.hasOnly(val) || arr.hasAny([val]);
    }

    function inEnum(val, arr) {
      return arr.hasAny([val]);
    }

    function isOptionalTimestampOrNao(value) {
      return value == "NAO_ESTABELECIDO" || value is timestamp;
    }

    function validateAvaliacao(newData) {
      return
        newData.pesoKg > 0 && newData.pesoKg < 400 &&
        newData.alturaCm >= 50 && newData.alturaCm < 250 &&
        inEnum(newData.ladoOuNivel, ["nao_se_aplica","bilateral","esquerdo","direito","cervical","toracico","lombar"]) &&
        (newData.preditoresViaAereaDificil.size() == 0 ||
          newData.preditoresViaAereaDificil.hasOnly([
            "Pendente (não avaliar em teleconsulta)",
            "Impossível avaliar ou avaliação prejudicada",
            "Pescoço curto",
            "Pescoço largo",
            "Retrognatismo",
            "Extensão limitada",
            "Outras alterações anatomicas indicando risco elevado de via aérea difícil",
            "Mallampati III",
            "Mallampati IV"
          ])
        ) &&
        isOptionalTimestampOrNao(newData.jejumSolidosGordura) &&
        isOptionalTimestampOrNao(newData.jejumLiquidosClaros);
    }

    // ========== GATE CORPORATIVO ==========
    // Fallback: apenas usuários @sedanimed.br ou @sani.med.br
    match /{document=**} {
      allow read, write: if isSedaniUser();
    }

    // ========== USUÁRIOS ==========
    match /usuarios/{usuarioId} {
      allow read: if isSedaniUser();
      allow create, update: if isAdmin();
      allow delete: if false;
    }

    // ========== PACIENTES (PERSISTÊNCIA LIMITADA) ==========
    // Dados de pacientes com cache otimizado - app deve limpar cache periodicamente
    match /pacientes/{pacienteId} {
      allow read: if isMedico() || isAdmin();
      allow create, update: if isMedico() || isAdmin();
      allow delete: if false; // Nunca deletar (auditoria LGPD)
    }

    // ========== MÉDICOS ==========
    match /medicos/{medicoId} {
      allow read: if isSedaniUser();
      allow create, update: if isAdmin();
      allow delete: if false;
    }

    // ========== CATÁLOGOS (CACHE LONGO) ==========
    // Dados estáticos que podem ter cache prolongado
    match /especialidades/{id} {
      allow read: if isSedaniUser();
      allow create, update: if isAdmin();
      allow delete: if false;
    }
    
    match /procedimentos/{id} {
      allow read: if isSedaniUser();
      allow create, update: if isAdmin();
      allow delete: if false;
    }
    
    match /complicacoes/{id} {
      allow read: if isSedaniUser();
      allow create, update: if isAdmin();
      allow delete: if false;
    }
    
    match /habitos/{id} {
      allow read: if isSedaniUser();
      allow create, update: if isAdmin();
      allow delete: if false;
    }
    
    match /revisaoSistemas/{id} {
      allow read: if isSedaniUser();
      allow create, update: if isAdmin();
      allow delete: if false;
    }
    
    match /medicamentosCatalogo/{id} {
      allow read: if isSedaniUser();
      allow create, update: if isAdmin();
      allow delete: if false;
    }
    
    match /ferramentasRisco/{id} {
      allow read: if isSedaniUser();
      allow create, update: if isAdmin();
      allow delete: if false;
    }

    // ========== AVALIAÇÕES ANESTÉSICAS ==========
    match /avaliacoesAnestesicas/{avaliacaoId} {
      function isAssinado() { return resource.data.dataAssinatura != null; }
      function willBeAssinado() { return request.resource.data.dataAssinatura != null; }

      allow read: if isSedaniUser();
      allow create: if isMedico() || isAdmin();
      allow update: if (isMedico() || isAdmin())
                    && !isAssinado()
                    && validateAvaliacao(request.resource.data)
                    && !request.resource.data.diff(resource.data).changedKeys().hasAny(["dataAssinatura","hashConteudo","hashAvaliacaoAnterior"]);
      allow delete: if false;

      // Subcoleções da avaliação
      match /medicamentos/{docId} {
        allow read, write: if isMedico() || isAdmin();
        allow delete: if false;
      }
      match /riscos/{docId} {
        allow read, write: if isMedico() || isAdmin();
        allow delete: if false;
      }
      match /exames/{docId} {
        allow read, write: if isMedico() || isAdmin();
        allow delete: if false;
      }
    }

    // ========== ESCALAS E PLANTÕES ==========
    match /escalas/{escalaId} {
      allow read: if isSedaniUser();
      allow create, update: if isAdmin(); // Ou isCoordenador()
      allow delete: if false;

      match /plantoes/{plantaoId} {
        allow read: if isSedaniUser();
        allow create, update: if isAdmin();
        allow delete: if false;
      }
    }

    match /plantoes/{plantaoId} {
      allow read: if isSedaniUser();
      allow create, update: if isAdmin();
      allow delete: if false;
    }

    // ========== SERVIÇOS ==========
    match /servicos/{servicoId} {
      allow read: if isSedaniUser();
      allow create: if isAdmin();
      allow update: if isSedaniUser(); // Todos podem atualizar status
      allow delete: if false;

      match /anestesistas/{anestesistaId} {
        allow read: if isSedaniUser();
        allow write: if isSedaniUser(); // Todos podem atribuir anestesistas
        allow delete: if false;
      }
    }

    // ========== NOTIFICAÇÕES ==========
    match /notificacoes/{notificacaoId} {
      // Ler apenas se for destinatário ou se for para todos
      allow read: if isSedaniUser() 
        && (resource.data.usuarioId == getUserEmail() 
            || resource.data.usuarioId == null);
      
      // Qualquer usuário pode criar notificações
      allow create: if isSedaniUser();
      
      // Apenas destinatário pode marcar como lida
      allow update: if isSedaniUser() 
        && (resource.data.usuarioId == getUserEmail() || resource.data.usuarioId == null)
        && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['lida', 'ativa']);
      
      allow delete: if false;
    }

    // ========== FILAS DE ATENDIMENTO ==========
    match /filas_solicitacoes/{solicitacaoId} {
      // Todos podem ler
      allow read: if isSedaniUser();
      
      // Todos podem criar
      allow create: if isSedaniUser() 
        && request.resource.data.solicitadoPor == getUserEmail()
        && request.resource.data.concluida == false;
      
      // Todos podem marcar como concluída
      allow update: if isSedaniUser() 
        && (
          // Marcar como concluída
          (request.resource.data.concluida == true 
            && resource.data.concluida == false
            && request.resource.data.concluidaPor == getUserEmail())
          ||
          // Quem criou pode editar antes de concluir
          (resource.data.solicitadoPor == getUserEmail()
            && resource.data.concluida == false)
        );
      
      allow delete: if false;
    }

    // ========== CHAT DO PLANTÃO (TEMPORÁRIO) ==========
    match /chat_plantao/{mensagemId} {
      // Apenas plantonistas de hoje podem ler
      allow read: if isSedaniUser() && usuarioEstaNoPlantaoHoje();
      
      // Apenas plantonistas podem criar mensagens
      allow create: if isSedaniUser() 
        && usuarioEstaNoPlantaoHoje()
        && request.resource.data.remetenteId == getUserEmail();
      
      // Mensagens são imutáveis
      allow update: if false;
      
      // Apenas sistema pode deletar (limpeza automática)
      allow delete: if false;
    }
  }
}
